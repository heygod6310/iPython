# -*- coding: utf-8 -*-
"""btc-simple-strategy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZUst2gJfBSxrdhw2aBdr_OJn6uMdDabi
"""

# Commented out IPython magic to ensure Python compatibility.
!git clone https://github.com/koreal6803/crypto_backtrader.git
# %cd crypto_backtrader

!pip install python-binance
!pip install bitmex
!pip install Backtesting
!pip install backtrader

from finlab import crypto

# geth the historical price
df = crypto.get_all_binance('BTCUSDT', '4h')

# calculate moving averages
sma1 = df.Close.rolling(20).mean()
sma2 = df.Close.rolling(60).mean()

# create long and short signal
signal_long = (sma1 > sma2) & (sma1.shift() < sma2.shift())
signal_short = (sma1 < sma2) & (sma1.shift() > sma2.shift())

# combine long and short signal
signal = signal_long.copy()
signal[signal_short] = -1

from backtesting import Backtest
from backtesting.lib import SignalStrategy
import pandas as pd

class Strategy(SignalStrategy):
    
    def init(self):
        super().init()
        
        # Precompute the two moving averages
        close = pd.Series(self.data.Close)
        sma1 = close.rolling(20).mean()
        sma2 = close.rolling(60).mean()
        
        # Precompute signal
        signal_long = (sma1 > sma2) & (sma1.shift() < sma2.shift())
        signal_short = (sma1 < sma2) & (sma1.shift() > sma2.shift())
        
        signal = signal_long
        signal[signal_short] = -1
        
        self.set_signal(signal)
        
        
    def next(self):
        super().next()

bt = Backtest(df, Strategy)
bt.run()

bt.plot()